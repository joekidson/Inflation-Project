rmse_var[tt]<-fe[,"RMSE"]
varf[tt]<-fc
#AR(3) estimation and forecasting
ar3<-Arima(training[,1],c(3,0,0)) #AR(3) for dp arima(p,d,q)
fc1 <- forecast(ar3, nfor) #forecast from AR
fe1<-accuracy(fc1,testdata[,1]) #RMSE
rmse_ar[tt]<-fe1[,"RMSE"][2]
#MA(1) model
ma3<-Arima(training[,1],c(0,0,3)) #MA(3) for dp arima(p,d,q)
fc1 <- forecast(ma3, nfor) #forecast from MA
fe1<-accuracy(fc1,testdata[,1]) #RMSE
rmse_ma[tt]<-fe1[,"RMSE"][2]
# shift forward a quarter for next loop
tt=tt+1
}
rmse_df <- data.frame(rmse_var, rmse_ar, rmse_ma)
colnames(rmse_df) <- c("VAR", "AR", "MA")
rmse <- ts(rmse_df, start=dd[test_row], frequency=4)
# plots
df_rmse <- data.frame(date=as.Date(as.yearqtr(time(rmse))), as.matrix(rmse))
head(df_rmse)
df_rmse <- df_rmse %>%
pivot_longer(!date, values_to = "RMSE", names_to = "Model")
df_rmse %>%
ggplot(aes(x = date, y = RMSE, group = Model, colour = Model)) +
geom_line() +
labs(title = "RMSE of single variable inflation models 2018 Q1 - 2021 Q3")
df_forecast <- data.frame(date=as.Date(as.yearqtr(time(forecast))), as.matrix(forecast))
head(df_forecast)
df_forecast <- df_forecast %>%
pivot_longer(!date, values_to = "forecast", names_to = "Model")
df_forecast %>%
ggplot(aes(x = date, y = forecast, group = Model, colour = Model)) +
geom_line() +
labs(title = "Forecasts of single variable inflation models 2018 Q1 - 2021 Q3")
f_df <- data.frame(varf, arf, maf, actual)
colnames(f_df) <- c("VARF", "ARF", "MAF", "Actual")
test_row
window(data,dd[117],dd[117])
tmp<-window(data,dd[117],dd[117])
tmp[,1]
tmp<-window(data,dd[117],dd[120])
tmp[,1]
tmp[,1][1]
tmp<-window(data,dd[117],dd[117])
tmp[,1][1]
# Q1/2
for(t in (test_row-1):(end_row-1)) { #loop from 2007Q1 to 2011Q4 for estimation
training<-window(data,c(start_year, start_q),dd[t]) #estimation sample
testdata<-window(data,dd[t+1],dd[t+nfor]) #forecast sample
#VAR(3) Estimation and Forecasting
var1=VAR(training,p=3,type="const",season=NULL,exog=NULL) #estimate VAR
p <- predict(var1, n.ahead=nfor) #forecast
fc=p$fcst[[1]][,"fcst"] #extract CPI growth forecast
fe<-accuracy(fc,testdata[,1])
rmse_var[tt]<-fe[,"RMSE"]
varf[tt]<-fc
actual[tt] <- testdata[,1][1]
#AR(3) estimation and forecasting
ar3<-Arima(training[,1],c(3,0,0)) #AR(3) for dp arima(p,d,q)
fc1 <- forecast(ar3, nfor) #forecast from AR
fe1<-accuracy(fc1,testdata[,1]) #RMSE
rmse_ar[tt]<-fe1[,"RMSE"][2]
arf[tt] <- fc1
#MA(1) model
ma3<-Arima(training[,1],c(0,0,3)) #MA(3) for dp arima(p,d,q)
fc1 <- forecast(ma3, nfor) #forecast from MA
fe1<-accuracy(fc1,testdata[,1]) #RMSE
rmse_ma[tt]<-fe1[,"RMSE"][2]
maf[tt] <- fc1
# shift forward a quarter for next loop
tt=tt+1
}
actual=matrix(nrow=test_size,ncol=1)
dd=time(data)  ##dd are the dates
tt<-1
# Q1/2
for(t in (test_row-1):(end_row-1)) { #loop from 2007Q1 to 2011Q4 for estimation
training<-window(data,c(start_year, start_q),dd[t]) #estimation sample
testdata<-window(data,dd[t+1],dd[t+nfor]) #forecast sample
#VAR(3) Estimation and Forecasting
var1=VAR(training,p=3,type="const",season=NULL,exog=NULL) #estimate VAR
p <- predict(var1, n.ahead=nfor) #forecast
fc=p$fcst[[1]][,"fcst"] #extract CPI growth forecast
fe<-accuracy(fc,testdata[,1])
rmse_var[tt]<-fe[,"RMSE"]
varf[tt]<-fc
actual[tt] <- testdata[,1][1]
#AR(3) estimation and forecasting
ar3<-Arima(training[,1],c(3,0,0)) #AR(3) for dp arima(p,d,q)
fc1 <- forecast(ar3, nfor) #forecast from AR
fe1<-accuracy(fc1,testdata[,1]) #RMSE
rmse_ar[tt]<-fe1[,"RMSE"][2]
arf[tt] <- fc1
#MA(1) model
ma3<-Arima(training[,1],c(0,0,3)) #MA(3) for dp arima(p,d,q)
fc1 <- forecast(ma3, nfor) #forecast from MA
fe1<-accuracy(fc1,testdata[,1]) #RMSE
rmse_ma[tt]<-fe1[,"RMSE"][2]
maf[tt] <- fc1
# shift forward a quarter for next loop
tt=tt+1
}
rmse_df <- data.frame(rmse_var, rmse_ar, rmse_ma)
colnames(rmse_df) <- c("VAR", "AR", "MA")
rmse <- ts(rmse_df, start=dd[test_row], frequency=4)
f_df <- data.frame(varf, arf, maf, actual)
#recursive forecasting
rmse_var=matrix(nrow=test_size,ncol=1) #will hold VAR RMSE
rmse_ar=matrix(nrow=test_size,ncol=1) #will hold AR RMSE
rmse_ma=matrix(nrow=test_size,ncol=1) #will hold MA RMSE
rmse_av=matrix(nrow=test_size,ncol=1)
varf=matrix(nrow=test_size,ncol=1)
arf=matrix(nrow=test_size,ncol=1)
maf=matrix(nrow=test_size,ncol=1)
avf=matrix(nrow=test_size,ncol=1)
actual=matrix(nrow=test_size,ncol=1)
dd=time(data)  ##dd are the dates
tt<-1
# Q1/2
for(t in (test_row-1):(end_row-1)) { #loop from 2007Q1 to 2011Q4 for estimation
training<-window(data,c(start_year, start_q),dd[t]) #estimation sample
testdata<-window(data,dd[t+1],dd[t+nfor]) #forecast sample
#VAR(3) Estimation and Forecasting
var1=VAR(training,p=3,type="const",season=NULL,exog=NULL) #estimate VAR
p <- predict(var1, n.ahead=nfor) #forecast
fc=p$fcst[[1]][,"fcst"] #extract CPI growth forecast
fe<-accuracy(fc,testdata[,1])
rmse_var[tt]<-fe[,"RMSE"]
varf[tt]<-fc
actual[tt] <- testdata[,1][1]
#AR(3) estimation and forecasting
ar3<-Arima(training[,1],c(3,0,0)) #AR(3) for dp arima(p,d,q)
fc1 <- forecast(ar3, nfor) #forecast from AR
fe1<-accuracy(fc1,testdata[,1]) #RMSE
rmse_ar[tt]<-fe1[,"RMSE"][2]
arf[tt] <- fc1
#MA(1) model
ma3<-Arima(training[,1],c(0,0,3)) #MA(3) for dp arima(p,d,q)
fc1 <- forecast(ma3, nfor) #forecast from MA
fe1<-accuracy(fc1,testdata[,1]) #RMSE
rmse_ma[tt]<-fe1[,"RMSE"][2]
maf[tt] <- fc1
# shift forward a quarter for next loop
tt=tt+1
}
rmse_df <- data.frame(rmse_var, rmse_ar, rmse_ma)
colnames(rmse_df) <- c("VAR", "AR", "MA")
rmse <- ts(rmse_df, start=dd[test_row], frequency=4)
f_df <- data.frame(varf, arf, maf, actual)
colnames(f_df) <- c("VARF", "ARF", "MAF", "Actual")
forecast <- ts(f_df, start=dd[test_row],frequency=4)
# plots
df_rmse <- data.frame(date=as.Date(as.yearqtr(time(rmse))), as.matrix(rmse))
head(df_rmse)
df_rmse <- df_rmse %>%
pivot_longer(!date, values_to = "RMSE", names_to = "Model")
df_rmse %>%
ggplot(aes(x = date, y = RMSE, group = Model, colour = Model)) +
geom_line() +
labs(title = "RMSE of single variable inflation models 2018 Q1 - 2021 Q3")
df_forecast <- data.frame(date=as.Date(as.yearqtr(time(forecast))), as.matrix(forecast))
head(df_forecast)
df_forecast <- df_forecast %>%
pivot_longer(!date, values_to = "forecast", names_to = "Model")
df_forecast %>%
ggplot(aes(x = date, y = forecast, group = Model, colour = Model)) +
geom_line() +
labs(title = "Forecasts of single variable inflation models 2018 Q1 - 2021 Q3")
?accuracy
?forecast
rmse_var=matrix(nrow=test_size,ncol=1) #will hold VAR RMSE
rmse_ar=matrix(nrow=test_size,ncol=1) #will hold AR RMSE
rmse_ma=matrix(nrow=test_size,ncol=1) #will hold MA RMSE
rmse_av=matrix(nrow=test_size,ncol=1)
varf=matrix(nrow=test_size,ncol=1)
arf=matrix(nrow=test_size,ncol=1)
maf=matrix(nrow=test_size,ncol=1)
avf=matrix(nrow=test_size,ncol=1)
actual=matrix(nrow=test_size,ncol=1)
dd=time(data)  ##dd are the dates
tt<-1
# Q1/2
for(t in (test_row-1):(end_row-1)) { #loop from 2007Q1 to 2011Q4 for estimation
training<-window(data,c(start_year, start_q),dd[t]) #estimation sample
testdata<-window(data,dd[t+1],dd[t+nfor]) #forecast sample
#VAR(3) Estimation and Forecasting
var1=VAR(training,p=3,type="const",season=NULL,exog=NULL) #estimate VAR
p <- predict(var1, n.ahead=nfor) #forecast
fc=p$fcst[[1]][,"fcst"] #extract CPI growth forecast
fe<-accuracy(fc,testdata[,1])
rmse_var[tt]<-fe[,"RMSE"]
varf[tt]<-fc
#actual[tt] <- testdata[,1][1]
#AR(3) estimation and forecasting
ar3<-Arima(training[,1],c(3,0,0)) #AR(3) for dp arima(p,d,q)
fc1 <- forecast(ar3, nfor) #forecast from AR
fe1<-accuracy(fc1,testdata[,1]) #RMSE
rmse_ar[tt]<-fe1[,"RMSE"][2]
arf[tt] <- fc1
#MA(1) model
ma3<-Arima(training[,1],c(0,0,3)) #MA(3) for dp arima(p,d,q)
fc1 <- forecast(ma3, nfor) #forecast from MA
fe1<-accuracy(fc1,testdata[,1]) #RMSE
rmse_ma[tt]<-fe1[,"RMSE"][2]
maf[tt] <- fc1
# shift forward a quarter for next loop
tt=tt+1
}
rmse_df <- data.frame(rmse_var, rmse_ar, rmse_ma)
colnames(rmse_df) <- c("VAR", "AR", "MA")
rmse <- ts(rmse_df, start=dd[test_row], frequency=4)
f_df <- data.frame(varf, arf, maf, actual)
colnames(f_df) <- c("VARF", "ARF", "MAF", "Actual")
forecast <- ts(f_df, start=dd[test_row],frequency=4)
# plots
df_rmse <- data.frame(date=as.Date(as.yearqtr(time(rmse))), as.matrix(rmse))
head(df_rmse)
df_rmse <- df_rmse %>%
pivot_longer(!date, values_to = "RMSE", names_to = "Model")
df_rmse %>%
ggplot(aes(x = date, y = RMSE, group = Model, colour = Model)) +
geom_line() +
labs(title = "RMSE of single variable inflation models 2018 Q1 - 2021 Q3")
df_forecast <- data.frame(date=as.Date(as.yearqtr(time(forecast))), as.matrix(forecast))
head(df_forecast)
heaD(forecast)
head(forecast)
actual
f_df <- data.frame(varf, arf, maf, actual)
colnames(f_df) <- c("VARF", "ARF", "MAF", "Actual")
head(f_df)
rmse_var=matrix(nrow=test_size,ncol=1) #will hold VAR RMSE
rmse_ar=matrix(nrow=test_size,ncol=1) #will hold AR RMSE
rmse_ma=matrix(nrow=test_size,ncol=1) #will hold MA RMSE
rmse_av=matrix(nrow=test_size,ncol=1)
varf=matrix(nrow=test_size,ncol=1)
arf=matrix(nrow=test_size,ncol=1)
maf=matrix(nrow=test_size,ncol=1)
avf=matrix(nrow=test_size,ncol=1)
actual=matrix(nrow=test_size,ncol=1)
dd=time(data)  ##dd are the dates
tt<-1
# Q1/2
for(t in (test_row-1):(end_row-1)) { #loop from 2007Q1 to 2011Q4 for estimation
training<-window(data,c(start_year, start_q),dd[t]) #estimation sample
testdata<-window(data,dd[t+1],dd[t+nfor]) #forecast sample
#VAR(3) Estimation and Forecasting
var1=VAR(training,p=3,type="const",season=NULL,exog=NULL) #estimate VAR
p <- predict(var1, n.ahead=nfor) #forecast
fc=p$fcst[[1]][,"fcst"] #extract CPI growth forecast
fe<-accuracy(fc,testdata[,1])
rmse_var[tt]<-fe[,"RMSE"]
varf[tt]<-fc
#actual[tt] <- testdata[,1][1]
#AR(3) estimation and forecasting
ar3<-Arima(training[,1],c(3,0,0)) #AR(3) for dp arima(p,d,q)
fc1 <- forecast(ar3, nfor) #forecast from AR
fe1<-accuracy(fc1,testdata[,1]) #RMSE
rmse_ar[tt]<-fe1[,"RMSE"][2]
arf[tt] <- fc1$mean[nfor]
#MA(1) model
ma3<-Arima(training[,1],c(0,0,3)) #MA(3) for dp arima(p,d,q)
fc1 <- forecast(ma3, nfor) #forecast from MA
fe1<-accuracy(fc1,testdata[,1]) #RMSE
rmse_ma[tt]<-fe1[,"RMSE"][2]
maf[tt] <- fc1$mean[nfor]
# shift forward a quarter for next loop
tt=tt+1
}
rmse_df <- data.frame(rmse_var, rmse_ar, rmse_ma)
colnames(rmse_df) <- c("VAR", "AR", "MA")
rmse <- ts(rmse_df, start=dd[test_row], frequency=4)
f_df <- data.frame(varf, arf, maf, actual)
colnames(f_df) <- c("VARF", "ARF", "MAF", "Actual")
forecast <- ts(f_df, start=dd[test_row],frequency=4)
head(f_df)
rmse_var=matrix(nrow=test_size,ncol=1) #will hold VAR RMSE
rmse_ar=matrix(nrow=test_size,ncol=1) #will hold AR RMSE
rmse_ma=matrix(nrow=test_size,ncol=1) #will hold MA RMSE
rmse_av=matrix(nrow=test_size,ncol=1)
varf=matrix(nrow=test_size,ncol=1)
arf=matrix(nrow=test_size,ncol=1)
maf=matrix(nrow=test_size,ncol=1)
avf=matrix(nrow=test_size,ncol=1)
actual=matrix(nrow=test_size,ncol=1)
dd=time(data)  ##dd are the dates
tt<-1
# Q1/2
for(t in (test_row-1):(end_row-1)) { #loop from 2007Q1 to 2011Q4 for estimation
training<-window(data,c(start_year, start_q),dd[t]) #estimation sample
testdata<-window(data,dd[t+1],dd[t+nfor]) #forecast sample
#VAR(3) Estimation and Forecasting
var1=VAR(training,p=3,type="const",season=NULL,exog=NULL) #estimate VAR
p <- predict(var1, n.ahead=nfor) #forecast
fc=p$fcst[[1]][,"fcst"] #extract CPI growth forecast
fe<-accuracy(fc,testdata[,1])
rmse_var[tt]<-fe[,"RMSE"]
varf[tt]<-fc
actual[tt] <- testdata[,1][1]
#AR(3) estimation and forecasting
ar3<-Arima(training[,1],c(3,0,0)) #AR(3) for dp arima(p,d,q)
fc1 <- forecast(ar3, nfor) #forecast from AR
fe1<-accuracy(fc1,testdata[,1]) #RMSE
rmse_ar[tt]<-fe1[,"RMSE"][2]
arf[tt] <- fc1$mean[nfor]
#MA(1) model
ma3<-Arima(training[,1],c(0,0,3)) #MA(3) for dp arima(p,d,q)
fc1 <- forecast(ma3, nfor) #forecast from MA
fe1<-accuracy(fc1,testdata[,1]) #RMSE
rmse_ma[tt]<-fe1[,"RMSE"][2]
maf[tt] <- fc1$mean[nfor]
# shift forward a quarter for next loop
tt=tt+1
}
rmse_df <- data.frame(rmse_var, rmse_ar, rmse_ma)
colnames(rmse_df) <- c("VAR", "AR", "MA")
rmse <- ts(rmse_df, start=dd[test_row], frequency=4)
f_df <- data.frame(varf, arf, maf, actual)
colnames(f_df) <- c("VARF", "ARF", "MAF", "Actual")
forecast <- ts(f_df, start=dd[test_row],frequency=4)
head(f_df)
df_forecast <- data.frame(date=as.Date(as.yearqtr(time(forecast))), as.matrix(forecast))
head(df_forecast)
df_forecast <- df_forecast %>%
pivot_longer(!date, values_to = "forecast", names_to = "Model")
df_forecast %>%
ggplot(aes(x = date, y = forecast, group = Model, colour = Model)) +
geom_line() +
labs(title = "Forecasts of single variable inflation models 2018 Q1 - 2021 Q3")
# load datasets
start_year <- 1989
start_q <- 1
nfor<-1 # forecast horizon - may want to play around with this
# single variable
raw_data<-read_csv("Data/CPIT_quarterly_1989Q1_2021Q3.csv")
dp<-ts(raw_data$Inflation,start=c(start_year,start_q,1),frequency=4)
data<-dp
# multi variable
raw <- read_csv("Data/var_test_data.csv")
raw2 <- read_csv("Data/var_test_data_diff.csv")
head(raw2)
raw2 <- raw2 %>% mutate(
diff_GDP = GDP - lag(GDP),
GDP_growth = 100*diff_GDP/GDP
)
raw$GDP_growth <- raw2$GDP_growth[2:nrow(raw2)]
data2 <- ts(raw[-1], start = c(start_year, start_q), frequency = 4)
# train models on all data
var1=VAR(data2,p=3,type="const",season=NULL,exog=NULL) #estimate VAR
p <- predict(var1, n.ahead=nfor) #forecast
p
nfor<-4 # forecast horizon - may want to play around with this
p <- predict(var1, n.ahead=nfor) #forecast
p
p$fcst
p$Inflation
p$fcst[1]
p$fcst[[1]][,"fcst"]
# train models on all data
ar3<-Arima(data,c(5,0,0)) #AR(2) for dy arima(p,d,q)
# create predictions for next x periods
fc1 <- forecast(ar3, nfor) #forecast from AR
fc1
p$fcst[1]
fc1$mean
fc1$mean[1]
fc1
fc1[, `Point Forecast`]
colnames(fc1)
fc1$mean
fc1$high
fc
fc1
?forecast
fc1$lower
fc1$lower['95%']
fc1$lower[1]
fc1$lower[2]
fc1$lower[,1]
fc1$lower[,2]
# plot predictions
head(data)
# plot predictions
data
# plot predictions
raw_data
# plot predictions
df_plot <- data.frame(date=as.Date(as.yearqtr(time(data))), as.matrix(data))
head(df_plot)
colnames(df_plot) <- c('data', 'inflation')
head(df_plot)
df_plot$model <- actual
df_plot$model <- "actual"
head(df_plot)
p$fcst[[1]][,"fcst"]
fc1$mean[nfor]
fc1$mean
data.frame(date=as.Date(as.yearqtr(time(fc1$mean))), as.matrix(fc1$mean))
pred1 <- data.frame(date=as.Date(as.yearqtr(time(fc1$mean))), as.matrix(fc1$mean))
pred1$model <- "AR"
rbind(df_plot, pred1)
colnames(pred1) <- c('data', 'inflation')
pred1 <- data.frame(date=as.Date(as.yearqtr(time(fc1$mean))), as.matrix(fc1$mean))
colnames(pred1) <- c('data', 'inflation')
pred1$model <- "AR"
rbind(df_plot, pred1)
p$fcst[1]
?predict
summary)var1
summary(var1)
forecast(var1, nfor)
forecast(var1, nfor)[1]
forecast(var1, nfor)$inflation
forecast(var1, nfor)
forecast(var1, nfor)$mean
forecast(var1, nfor)[1]
View(forecast)
p <- forecast(var1, nfor)
View(p)
forecast(var1, nfor)$forecast
forecast(var1, nfor)$forecast$Inflation
fc1$Inflation
forecast(var1, nfor)$forecast$Inflation$mean
p <- forecast(var1, nfor)$forecast$Inflation
pred2 <- data.frame(date=as.Date(as.yearqtr(time(p$mean))), as.matrix(p$mean))
colnames(pred2) <- c('data', 'inflation')
pred2$model <- "VAR"
rbind(df_plot, pred1, pred2)
df_plot <- rbind(df_plot, pred1, pred2)
df_plot %>%
ggplot(aes(x = date, y = inflation, group = model, colour = model)) +
geom_line() +
labs(title = "Forecasts of multi variable inflation models + baseline 2018 Q1 - 2021 Q3")
pred1 <- data.frame(date=as.Date(as.yearqtr(time(fc1$mean))), as.matrix(fc1$mean))
colnames(pred1) <- c('date', 'inflation')
pred1$model <- "AR"
pred2 <- data.frame(date=as.Date(as.yearqtr(time(p$mean))), as.matrix(p$mean))
colnames(pred2) <- c('date', 'inflation')
pred2$model <- "VAR"
# plot predictions
df_plot <- data.frame(date=as.Date(as.yearqtr(time(data))), as.matrix(data))
colnames(df_plot) <- c('date', 'inflation')
df_plot$model <- "actual"
head(df_plot)
df_plot <- rbind(df_plot, pred1, pred2)
df_plot %>%
ggplot(aes(x = date, y = inflation, group = model, colour = model)) +
geom_line() +
labs(title = "Forecasts of multi variable inflation models + baseline 2018 Q1 - 2021 Q3")
nfor<-12 # forecast horizon - may want to play around with this
# create predictions for next nfor periods
fc1 <- forecast(ar3, nfor) #forecast from AR
pred1 <- data.frame(date=as.Date(as.yearqtr(time(fc1$mean))), as.matrix(fc1$mean))
colnames(pred1) <- c('date', 'inflation')
pred1$model <- "AR"
p <- forecast(var1, nfor)$forecast$Inflation
pred2 <- data.frame(date=as.Date(as.yearqtr(time(p$mean))), as.matrix(p$mean))
colnames(pred2) <- c('date', 'inflation')
pred2$model <- "VAR"
# plot predictions
df_plot <- data.frame(date=as.Date(as.yearqtr(time(data))), as.matrix(data))
colnames(df_plot) <- c('date', 'inflation')
df_plot$model <- "actual"
head(df_plot)
df_plot <- rbind(df_plot, pred1, pred2)
df_plot %>%
ggplot(aes(x = date, y = inflation, group = model, colour = model)) +
geom_line() +
labs(title = "Forecasts of multi variable inflation models + baseline 2018 Q1 - 2021 Q3")
df_plot %>%
ggplot(aes(x = date, y = inflation, group = model, colour = model)) +
geom_line() +
labs(title = "Future forecasts of inflation models")
ggsave("Plots/future_forecast_comparison", device ="png")
df_rmse %>%
ggplot(aes(x = date, y = RMSE, group = Model, colour = Model)) +
geom_line() +
labs(title = "RMSE of multi variable inflation models + baseline 2018 Q1 - 2021 Q3")
ggsave("Plots/multivar_RMSE_comparison", device ="png")
df_forecast %>%
ggplot(aes(x = date, y = forecast, group = Model, colour = Model)) +
geom_line() +
labs(title = "Forecasts of multi variable inflation models + baseline 2018 Q1 - 2021 Q3")
ggsave("Plots/multivar_forecast_comparison", device ="png")
rmse_df <- data.frame(rmse_tar, rmse_star, rmse_ar, rmse_av)
colnames(rmse_df) <- c("TAR", "STAR", "AR", "Average")
rmse <- ts(rmse_df, start=dd[test_row], frequency=4)
f_df <- data.frame(tarf, starf, arf, avf, outturn)
colnames(f_df) <- c("TARF", "STARF", "ARF", "Average", "Actual")
forecast <- ts(f_df, start=dd[test_row],frequency=4)
# clean up these plots
autoplot(rmse, facets=FALSE)
autoplot(forecast, facets = FALSE)
df_rmse <- data.frame(date=as.Date(as.yearqtr(time(rmse))), as.matrix(rmse))
head(df_rmse)
df_rmse <- df_rmse %>%
pivot_longer(!date, values_to = "RMSE", names_to = "Model")
df_rmse %>%
ggplot(aes(x = date, y = RMSE, group = Model, colour = Model)) +
geom_line() +
labs(title = "RMSE of single variable inflation models 2018 Q1 - 2021 Q3")
ggsave("Plots/singlevar_RMSE_comparison", device ="png")
df_forecast <- data.frame(date=as.Date(as.yearqtr(time(forecast))), as.matrix(forecast))
head(df_forecast)
df_forecast <- df_forecast %>%
pivot_longer(!date, values_to = "forecast", names_to = "Model")
df_forecast %>%
ggplot(aes(x = date, y = forecast, group = Model, colour = Model)) +
geom_line() +
labs(title = "Forecasts of single variable inflation models 2018 Q1 - 2021 Q3")
ggsave("Plots/singlevar_forecast_comparison", device ="png")
